apiVersion: v1
kind: ConfigMap
metadata:
  name: backend-config
  namespace: jarvis
data:
  # Database
  POSTGRES_DB: "jarvis"
  POSTGRES_USER: "jarvis"
  POSTGRES_PASSWORD: "jarvis2025"
  POSTGRES_HOST: "postgres"
  POSTGRES_PORT: "5432"
  DATABASE_URL: "postgresql://jarvis:jarvis2025@postgres:5432/jarvis"
  
  # Redis
  REDIS_URL: "redis://redis:6379"
  
  # Services URLs
  BACKEND_API_URL: "http://backend:8000"
  WEBSOCKET_URL: "ws://backend:8000"
  OLLAMA_BASE_URL: "http://ollama:11434"
  TTS_API_URL: "http://tts-api:8002"
  STT_API_URL: "http://stt-api:8003"
  INTERFACE_URL: "http://interface:8000"
  
  # Integrations
  HOME_ASSISTANT_URL: "http://homeassistant:8123"
  MQTT_BROKER: "mqtt://localhost:1883"
  
  # Paths
  TTS_MODEL_PATH: "/app/models/tts"
  STT_MODEL_PATH: "/app/models/stt"
  LOGS_PATH: "/app/logs"
  DATA_PATH: "/app/data"
  
  # Memory
  MEMORY_UPDATE_INTERVAL: "300"
  MEMORY_RETENTION_DAYS: "30"
  
  # Security
  JARVIS_SECRET_KEY: "jarvis-secret-key-k8s"
  CORS_ORIGINS: '["http://localhost:3000", "http://interface:8000"]'
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: jarvis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
      - name: backend
        image: jarvis-backend:latest
        imagePullPolicy: Never  # Pour utiliser images locales
        ports:
        - containerPort: 8000
        envFrom:
        - configMapRef:
            name: backend-config
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health  
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: backend
  namespace: jarvis
spec:
  selector:
    app: backend
  ports:
    - port: 8000
      targetPort: 8000
  type: ClusterIP