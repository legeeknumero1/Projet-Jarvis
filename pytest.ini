# ===============================================
# ðŸ§ª PYTEST CONFIGURATION - JARVIS V1.3.2
# ===============================================

[tool:pytest]
minversion = 6.0
addopts = 
    -ra 
    -q 
    --strict-markers 
    --strict-config 
    --tb=short
    --cov=backend 
    --cov-report=term-missing 
    --cov-report=html:htmlcov 
    --cov-report=xml 
    --cov-fail-under=85
    --maxfail=5
    --disable-warnings

# RÃ©pertoires des tests
testpaths = tests

# Patterns de fichiers de tests
python_files = test_*.py

# Patterns de classes de tests
python_classes = Test*

# Patterns de fonctions de tests
python_functions = test_*

# Marqueurs personnalisÃ©s
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    unit: marks tests as unit tests
    security: marks tests as security tests
    performance: marks tests as performance tests
    ollama: marks tests that require Ollama service
    auth: marks tests related to authentication
    api: marks tests for API endpoints
    websocket: marks tests for WebSocket functionality
    database: marks tests that require database
    external_api: marks tests that call external APIs

# Configuration de logging pour les tests
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Configuration coverage
[coverage:run]
source = backend
omit = 
    */venv/*
    */env/*
    */__pycache__/*
    */migrations/*
    */tests/*
    */test_*.py
    */conftest.py
    */setup.py

[coverage:report]
precision = 2
show_missing = true
skip_covered = false
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    pass
    except ImportError:

[coverage:html]
directory = htmlcov
title = Jarvis Test Coverage Report

# Filtres pour les warnings
filterwarnings =
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore:.*:pytest.PytestUnraisableExceptionWarning

# Timeout pour les tests (en secondes)
timeout = 300

# Asyncio configuration
asyncio_mode = auto