apiVersion: v1
kind: ConfigMap
metadata:
  name: jarvis-config
  namespace: jarvis
  labels:
    app: jarvis
    component: config
data:
  APP_NAME: "Jarvis AI Assistant"
  DEBUG: "true"
  ENVIRONMENT: "development"
  LOG_LEVEL: "INFO"
  
  # Base de données URLs (utilise les services K8s)
  DATABASE_URL: "postgresql://jarvis:jarvis@jarvis-postgres:5432/jarvis_db"
  REDIS_URL: "redis://jarvis-redis:6379"
  OLLAMA_BASE_URL: "http://jarvis-ollama:11434"
  QDRANT_URL: "http://jarvis-qdrant:6333"
  TIMESCALE_URL: "postgresql://jarvis:jarvis@jarvis-timescale:5432/jarvis_timeseries"
  
  # Services API URLs (utilise les services K8s)
  TTS_API_URL: "http://jarvis-tts:8002"
  STT_API_URL: "http://jarvis-stt:8003"
  BRAIN_API_URL: "http://jarvis-backend:8000"
  INTERFACE_URL: "http://jarvis-interface:3000"
  WEBSOCKET_URL: "ws://jarvis-interface:8001/ws"
  
  # Modèles IA
  OLLAMA_MODEL: "llama3.1:latest"
  WHISPER_MODEL: "base"
  PIPER_MODEL: "fr_FR-upmc-medium"
  
  # Home Assistant (à configurer)
  HOME_ASSISTANT_URL: "http://localhost:8123"
  
  # MQTT (à configurer)
  MQTT_BROKER: "localhost"
  MQTT_PORT: "1883"
  
  # Mémoire et performance
  MEMORY_UPDATE_INTERVAL: "604800"  # 7 jours
  MEMORY_RETENTION_DAYS: "365"
  BRAIN_MEMORY_ENABLED: "true"
  EMOTIONAL_ANALYSIS_ENABLED: "true"
  AUTO_CONSOLIDATION_ENABLED: "true"
  
  # CORS - Sécurisé pour K8s
  CORS_ORIGINS: "http://localhost:3000,http://localhost:8000"
  
  # Chemins internes containers
  MODELS_PATH: "/app/models"
  TTS_MODEL_PATH: "/app/models/tts"
  STT_MODEL_PATH: "/app/models/stt"
  LOGS_PATH: "/app/logs"
  DATA_PATH: "/app/data"
  LOG_FILE: "/app/logs/jarvis.log"
---
apiVersion: v1
kind: Secret
metadata:
  name: jarvis-secrets
  namespace: jarvis
  labels:
    app: jarvis
    component: secrets
type: Opaque
data:
  # Mots de passe encodés en base64
  POSTGRES_PASSWORD: amFydmlz  # "jarvis" en base64
  SECRET_KEY: eW91ci1zZWNyZXQta2V5LWNoYW5nZS10aGlzLWluLXByb2R1Y3Rpb24=  # secret key
  HOME_ASSISTANT_TOKEN: eW91cl9oYV90b2tlbl9oZXJl  # "your_ha_token_here"
  MQTT_USERNAME: ""
  MQTT_PASSWORD: ""
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: jarvis-postgres-init
  namespace: jarvis
  labels:
    app: jarvis-postgres
    component: config
data:
  init.sql: |
    -- Initialisation base de données Jarvis
    -- Créé par Instance #8 - 2025-07-18 18:55
    
    CREATE EXTENSION IF NOT EXISTS "uuid-ossp";
    CREATE EXTENSION IF NOT EXISTS "vector";
    
    -- Table profils utilisateurs
    CREATE TABLE IF NOT EXISTS user_profiles (
        id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
        name VARCHAR(255) NOT NULL,
        preferences JSONB DEFAULT '{}',
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
    );
    
    -- Table conversations
    CREATE TABLE IF NOT EXISTS conversations (
        id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
        user_id UUID REFERENCES user_profiles(id),
        message TEXT NOT NULL,
        response TEXT,
        context JSONB DEFAULT '{}',
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
    );
    
    -- Table mémoire contextuelle
    CREATE TABLE IF NOT EXISTS memory_contexts (
        id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
        user_id UUID REFERENCES user_profiles(id),
        context_type VARCHAR(100) NOT NULL,
        content TEXT NOT NULL,
        importance INTEGER DEFAULT 1,
        embedding vector(384),
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        last_accessed TIMESTAMP DEFAULT CURRENT_TIMESTAMP
    );
    
    -- Index pour recherche vectorielle
    CREATE INDEX IF NOT EXISTS memory_embedding_idx ON memory_contexts USING ivfflat (embedding vector_cosine_ops);
    
    -- Profil par défaut Enzo
    INSERT INTO user_profiles (name, preferences) VALUES 
    ('Enzo', '{"location": "Perpignan", "language": "fr", "age": 21, "interests": ["domotique", "IA", "cybersécurité"]}')
    ON CONFLICT DO NOTHING;
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: jarvis-timescale-init
  namespace: jarvis
  labels:
    app: jarvis-timescale
    component: config
data:
  init.sql: |
    -- Initialisation TimescaleDB pour Jarvis
    -- Mémoire temporelle et métriques
    
    CREATE EXTENSION IF NOT EXISTS timescaledb;
    
    -- Table métriques système
    CREATE TABLE IF NOT EXISTS system_metrics (
        time TIMESTAMPTZ NOT NULL DEFAULT NOW(),
        metric_name VARCHAR(100) NOT NULL,
        value DOUBLE PRECISION NOT NULL,
        tags JSONB DEFAULT '{}',
        host VARCHAR(100) DEFAULT 'jarvis'
    );
    
    -- Hypertable pour optimisation temporelle
    SELECT create_hypertable('system_metrics', 'time', if_not_exists => TRUE);
    
    -- Table logs structurés
    CREATE TABLE IF NOT EXISTS structured_logs (
        time TIMESTAMPTZ NOT NULL DEFAULT NOW(),
        level VARCHAR(20) NOT NULL,
        service VARCHAR(50) NOT NULL,
        message TEXT NOT NULL,
        context JSONB DEFAULT '{}',
        host VARCHAR(100) DEFAULT 'jarvis'
    );
    
    SELECT create_hypertable('structured_logs', 'time', if_not_exists => TRUE);
    
    -- Politique de rétention (30 jours pour métriques, 90 jours pour logs)
    SELECT add_retention_policy('system_metrics', INTERVAL '30 days', if_not_exists => true);
    SELECT add_retention_policy('structured_logs', INTERVAL '90 days', if_not_exists => true);
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: jarvis-qdrant-config
  namespace: jarvis
  labels:
    app: jarvis-qdrant
    component: config
data:
  production.yaml: |
    log_level: INFO
    
    service:
      host: 0.0.0.0
      http_port: 6333
      grpc_port: 6334
      enable_cors: true
      
    storage:
      # Stockage persistant dans PVC
      storage_path: /qdrant/storage
      
      # Optimisations mémoire
      performance:
        max_search_threads: 4
        max_optimization_threads: 2
      
      # Configuration snapshots
      snapshots_path: /qdrant/snapshots
      
    # Configuration clusters (pour scaling futur)
    cluster:
      enabled: false
      
    # Télémétrie désactivée
    telemetry_disabled: true